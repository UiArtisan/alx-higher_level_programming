======================
100-matrix_mul
======================

Matrix multiplication  module is the unit test that verifies ``matrix_mul(m_a, m_b)``

=====================

::

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul
    >>> m_a = [[1, 2], [3, 4],]
    >>> m_b = m_a
    >>> print(matrix_mul(m_a, m_b))
    [[7, 10], [15, 22]]

::

    >>> m_a = [[1, 2]]
    >>> m_b = [[3, 4], [5, 6]]
    >>> print(matrix_mul(m_a, m_b))
    [[13, 16]]

::

    >>> m_a = [[1.5, 2.5, 1.2], [3.6, -3.3, 2.2]]
    >>> m_b = [[1.0, 2.1], [2.9, 2.4], [3.2, -2.4]]
    >>> print(matrix_mul(m_a, m_b))
    [[12.59, 6.2700000000000005], [1.070000000000002, -5.639999999999999]]

::

    >>> m_a = [[1.2, 1.5, 2.2, 2], [4.66, 3, -1.2, 2]]
    >>> m_b = [[1.0, 3.3, 2], [-2.9, 4.4, 1], [2, 3.2, 4.4], [1, 2, 3]]
    >>> print(matrix_mul(m_a, m_b))
    [[3.250000000000001, 21.6, 19.580000000000002], [-4.4399999999999995, 28.738000000000003, 13.04]]

::

    >>> print(matrix_mul([], [[1, 2]]))
    Traceback (most recent call last):
    ValueError: m_a can't be empty

::

    >>> print(matrix_mul([[]], []))
    Traceback (most recent call last):
    ValueError: m_a can't be empty

::

    >>> print(matrix_mul([], [[]]))
    Traceback (most recent call last):
    ValueError: m_a can't be empty

::

    >>> print(matrix_mul("string", [[1, 2]]))
    Traceback (most recent call last):
    TypeError: m_a must be a list

::

    >>> print(matrix_mul([[1, 2]], "string"))
    Traceback (most recent call last):
    TypeError: m_b must be a list

::

    >>> print(matrix_mul("string1", "string2"))
    Traceback (most recent call last):
    TypeError: m_a must be a list

::

    >>> print(matrix_mul(None, None))
    Traceback (most recent call last):
    TypeError: m_a must be a list

::

    >>> print(matrix_mul([1, 2], [3, 4]))
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

::

    >>> print(matrix_mul([[1, "string"]], [[{"a": 1}, 3.2]]))
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

::

    >>> m_a = [[5, 6, 10], [7, 8]]
    >>> m_b = [[5, 6], [7, 8]]
    >>> print(matrix_mul(m_a, m_b))
    Traceback (most recent call last):
    TypeError: each row of m_a must be of the same size

::

    >>> m_a = [[5, 6], [7, 8]]
    >>> m_b = [[5, 6, 1], [7, 8]]
    >>> print(matrix_mul(m_a, m_b))
    Traceback (most recent call last):
    TypeError: each row of m_b must be of the same size

::

    >>> print(matrix_mul([[5, 6]], [7, 8]))
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists

::

    >>> print(matrix_mul([[5, 6]], [[]]))
    Traceback (most recent call last):
    ValueError: m_b can't be empty

::

    >>> m_a = [[3, 4], [5, 6],]
    >>> m_b = [[3, 4], [5, 6], [7, 8]]
    >>> print(matrix_mul(m_a, m_b))
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied

::

    >>> print(matrix_mul([[1, 2]], [[{"ed": 1}, 2.2]]))
    Traceback (most recent call last):
    TypeError: m_b should contain only integers or floats

::

    >>> print(matrix_mul([[1, "string"]], [[3, 4]]))
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

::

    >>> print(matrix_mul([1, 2], [[3, 4]]))
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

::

    >>> print(matrix_mul([[1, 2]], [3, 4]))
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists

::

    >>> m_a = [[1, 2], [3, 4, 5]]
    >>> m_b = m_a
    >>> print(matrix_mul(m_a, m_b))
    Traceback (most recent call last):
    TypeError: each row of m_a must be of the same size

::

    >>> matrix_mul(None, [[1, 2]])
    Traceback (most recent call last):
    TypeError: m_a must be a list

::

    >>> matrix_mul([[1, 2]], None)
    Traceback (most recent call last):
    TypeError: m_b must be a list

::

    >>> matrix_mul([[1, 2]])
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

::

    >>> matrix_mul()
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

::
