5-text_indentation
======================

This module defines a text-indentation function ``text_indentation(text)``.

Usage
=====

Text is printed with two new lines after each of the characters ``.``, ``?``,
and ``:``.

=====================

::

    >>> text_indentation = __import__('5-text_indentation').text_indentation
    >>> text_indentation("This is a test.")
    This is a test.
    <BLANKLINE>

It works with multiple sentences and leading spaces.

::

    >>> text_indentation("    This is the first sentence. What's next? Another one.")
    This is the first sentence.
    <BLANKLINE>
    What's next?
    <BLANKLINE>
    Another one.
    <BLANKLINE>

It handles empty input.

::

    >>> text_indentation("")

It works with sentences ending with '?', '.', and ':'.

::

    >>> text_indentation("Do you have a question? How about an exclamation. This is a test:")
    Do you have a question?
    <BLANKLINE>
    How about an exclamation.
    <BLANKLINE>
    This is a test:
    <BLANKLINE>

It works with input that contains only spaces and no sentences.

::

    >>> text_indentation("      ")
    
It correctly preserves empty lines.

::

    >>> text_indentation("This is a test.\n\nNew paragraph.\n\nAnd another one.")
    This is a test.
    <BLANKLINE>
    <BLANKLINE>
    <BLANKLINE>
    New paragraph.
    <BLANKLINE>
    <BLANKLINE>
    <BLANKLINE>
    And another one.
    <BLANKLINE>

TypeError when text is not a string.

::

    >>> text_indentation(42)
    Traceback (most recent call last):
    TypeError: text must be a string

TypeError when text is a dictionary.

::

    >>> text_indentation({"text": "This is a dictionary."})
    Traceback (most recent call last):
    TypeError: text must be a string

TypeError when text is None.

::

    >>> text_indentation(None)
    Traceback (most recent call last):
    TypeError: text must be a string

::
